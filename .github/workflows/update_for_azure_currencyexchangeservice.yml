name: Build, Test, and Deploy JAR app to Azure Web App - currencyexchangeservice

on:
  push:
    branches: [ "update_for_azure" ]
  pull_request:
    branches: [ "update_for_azure" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle Wrapper
        run: ./gradlew clean build

      - name: Find main JAR (exclude plain, sources, and javadoc)
        id: find_jar
        run: |
          JAR_NAME=$(find build/libs -name '*.jar' ! -name '*-plain.jar' ! -name '*-sources.jar' ! -name '*-javadoc.jar' | head -n 1)
          echo "JAR_NAME=$JAR_NAME" >> $GITHUB_ENV

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: java-app
          path: build/libs/${{ env.JAR_NAME }}

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: java-app

      - name: Run Tests
        run: java -jar ${{ env.JAR_NAME }} --test

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: java-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'currencyexchangeservice'
          slot-name: 'Production'
          package: ${{ env.JAR_NAME }}
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_BA44D8CC83114D9D9C5B98F711512549 }}
    
      - name: Save Deployment URL
        run: echo "APP_URL=${{ steps.deploy-to-webapp.outputs.webapp-url }}" >> $GITHUB_ENV
        
  check-success:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Wait 10 minutes for environment stabilization
        run: sleep 600
    
      - name: Check App Availability
        run: |
          response=$(curl -o /dev/null -s -w "%{http_code}\n" ${{ env.APP_URL }}/api/currency?date=1980-01-01)
          if [[ "$response" == "200" || "$response" == "203" || "$response" == "204" ]]; then
            echo "Success: Service is up and running. Response status: $response"
          else
            echo "Fail: Service responded with status: $response"
            exit 1
          fi
